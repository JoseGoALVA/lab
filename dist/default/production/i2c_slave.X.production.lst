

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Aug 23 00:42:26 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  008F                     	;# 
   491  0090                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0093                     	;# 
   497  0094                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  009F                     	;# 
   509  0105                     	;# 
   510  0107                     	;# 
   511  0108                     	;# 
   512  0109                     	;# 
   513  010C                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  010F                     	;# 
   518  0185                     	;# 
   519  0187                     	;# 
   520  0188                     	;# 
   521  0189                     	;# 
   522  018C                     	;# 
   523  018D                     	;# 
   524  0000                     	;# 
   525  0001                     	;# 
   526  0002                     	;# 
   527  0003                     	;# 
   528  0004                     	;# 
   529  0005                     	;# 
   530  0006                     	;# 
   531  0007                     	;# 
   532  0008                     	;# 
   533  0009                     	;# 
   534  000A                     	;# 
   535  000B                     	;# 
   536  000C                     	;# 
   537  000D                     	;# 
   538  000E                     	;# 
   539  000E                     	;# 
   540  000F                     	;# 
   541  0010                     	;# 
   542  0011                     	;# 
   543  0012                     	;# 
   544  0013                     	;# 
   545  0014                     	;# 
   546  0015                     	;# 
   547  0015                     	;# 
   548  0016                     	;# 
   549  0017                     	;# 
   550  0018                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001B                     	;# 
   555  001C                     	;# 
   556  001D                     	;# 
   557  001E                     	;# 
   558  001F                     	;# 
   559  0081                     	;# 
   560  0085                     	;# 
   561  0086                     	;# 
   562  0087                     	;# 
   563  0088                     	;# 
   564  0089                     	;# 
   565  008C                     	;# 
   566  008D                     	;# 
   567  008E                     	;# 
   568  008F                     	;# 
   569  0090                     	;# 
   570  0091                     	;# 
   571  0092                     	;# 
   572  0093                     	;# 
   573  0093                     	;# 
   574  0093                     	;# 
   575  0094                     	;# 
   576  0095                     	;# 
   577  0096                     	;# 
   578  0097                     	;# 
   579  0098                     	;# 
   580  0099                     	;# 
   581  009A                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  009F                     	;# 
   587  0105                     	;# 
   588  0107                     	;# 
   589  0108                     	;# 
   590  0109                     	;# 
   591  010C                     	;# 
   592  010C                     	;# 
   593  010D                     	;# 
   594  010E                     	;# 
   595  010F                     	;# 
   596  0185                     	;# 
   597  0187                     	;# 
   598  0188                     	;# 
   599  0189                     	;# 
   600  018C                     	;# 
   601  018D                     	;# 
   602  001E                     _ADRESH	set	30
   603  001F                     _ADCON0bits	set	31
   604  0001                     _TMR0	set	1
   605  000B                     _INTCONbits	set	11
   606  0005                     _PORTA	set	5
   607  0006                     _PORTB	set	6
   608  0008                     _PORTD	set	8
   609  0014                     _SSPCONbits	set	20
   610  000C                     _PIR1bits	set	12
   611  0013                     _SSPBUF	set	19
   612  0014                     _SSPCON	set	20
   613  003F                     _RC7	set	63
   614  003E                     _RC6	set	62
   615  0047                     _RD7	set	71
   616  0046                     _RD6	set	70
   617  0045                     _RD5	set	69
   618  0044                     _RD4	set	68
   619  0043                     _RD3	set	67
   620  0042                     _RD2	set	66
   621  0041                     _RD1	set	65
   622  0040                     _RD0	set	64
   623  0063                     _SSPIF	set	99
   624  005E                     _PEIE	set	94
   625  005F                     _GIE	set	95
   626  009F                     _ADCON1bits	set	159
   627  0081                     _OPTION_REGbits	set	129
   628  008C                     _PIE1bits	set	140
   629  0088                     _TRISD	set	136
   630  0086                     _TRISB	set	134
   631  0085                     _TRISA	set	133
   632  0094                     _SSPSTATbits	set	148
   633  008F                     _OSCCONbits	set	143
   634  0091                     _SSPCON2bits	set	145
   635  0087                     _TRISCbits	set	135
   636  0094                     _SSPSTAT	set	148
   637  0093                     _SSPADD	set	147
   638  0091                     _SSPCON2	set	145
   639  04A0                     _BF	set	1184
   640  0463                     _SSPIE	set	1123
   641  043C                     _TRISC4	set	1084
   642  043B                     _TRISC3	set	1083
   643  0189                     _ANSELH	set	393
   644  0188                     _ANSEL	set	392
   645                           
   646                           	psect	cinit
   647  000F                     start_initialization:	
   648                           ; #config settings
   649                           
   650  000F                     __initialization:
   651                           
   652                           ; Clear objects allocated to COMMON
   653  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   654  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   655  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   656  0012                     end_of_initialization:	
   657                           ;End of C runtime variable initialization code
   658                           
   659  0012                     __end_of__initialization:
   660  0012  0183               	clrf	3
   661  0013  120A  118A  28F2   	ljmp	_main	;jump to C main() function
   662                           
   663                           	psect	bssCOMMON
   664  0077                     __pbssCOMMON:
   665  0077                     _valor_adc:
   666  0077                     	ds	1
   667  0078                     _dato:
   668  0078                     	ds	1
   669  0079                     _z:
   670  0079                     	ds	1
   671                           
   672                           	psect	cstackCOMMON
   673  0070                     __pcstackCOMMON:
   674  0070                     ?_adc_read:
   675  0070                     ??_adc_read:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_setup:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_adc_start:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_I2C_Slave_Init:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_int_osc_MHz:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_isr:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_main:	
   694                           ; 1 bytes @ 0x0
   695                           
   696                           
   697                           ; 1 bytes @ 0x0
   698  0070                     	ds	1
   699  0071                     ??_isr:
   700                           
   701                           ; 1 bytes @ 0x1
   702  0071                     	ds	3
   703  0074                     ??_adc_start:
   704  0074                     ?_adc_init:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0074                     ??_I2C_Slave_Init:	
   708                           ; 1 bytes @ 0x4
   709                           
   710  0074                     ??_int_osc_MHz:	
   711                           ; 1 bytes @ 0x4
   712                           
   713  0074                     I2C_Slave_Init@address:	
   714                           ; 1 bytes @ 0x4
   715                           
   716  0074                     adc_init@vref_plus:	
   717                           ; 1 bytes @ 0x4
   718                           
   719                           
   720                           ; 1 bytes @ 0x4
   721  0074                     	ds	1
   722  0075                     int_osc_MHz@freq:
   723  0075                     adc_init@vref_minus:	
   724                           ; 1 bytes @ 0x5
   725                           
   726  0075                     adc_start@channel:	
   727                           ; 1 bytes @ 0x5
   728                           
   729                           
   730                           ; 1 bytes @ 0x5
   731  0075                     	ds	1
   732  0076                     ??_adc_init:
   733                           
   734                           ; 1 bytes @ 0x6
   735  0076                     	ds	1
   736  0077                     ??_setup:
   737  0077                     ??_main:	
   738                           ; 1 bytes @ 0x7
   739                           
   740                           
   741                           	psect	cstackBANK0
   742  0020                     __pcstackBANK0:	
   743                           ; 1 bytes @ 0x7
   744                           
   745  0020                     adc_init@adc_cs:
   746                           
   747                           ; 1 bytes @ 0x0
   748  0020                     	ds	1
   749                           
   750                           	psect	maintext
   751  00F2                     __pmaintext:	
   752 ;;
   753 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   754 ;;
   755 ;; *************** function _main *****************
   756 ;; Defined at:
   757 ;;		line 91 in file "slave.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0, pclath, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : B00/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0
   774 ;;      Totals:         0       0       0       0       0
   775 ;;Total ram usage:        0 bytes
   776 ;; Hardware stack levels required when called: 4
   777 ;; This function calls:
   778 ;;		_adc_start
   779 ;;		_setup
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785  00F2                     _main:	
   786                           ;psect for function _main
   787                           
   788  00F2                     l1207:	
   789                           ;incstack = 0
   790                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   791                           
   792                           
   793                           ;slave.c: 92:     setup();
   794  00F2  120A  118A  2083  120A  118A  	fcall	_setup
   795  00F7                     l132:	
   796                           ;slave.c: 93:     while(1){
   797                           
   798                           
   799                           ;slave.c: 94:         adc_start(0);
   800  00F7  3000               	movlw	0
   801  00F8  120A  118A  2101  120A  118A  	fcall	_adc_start
   802  00FD  28F7               	goto	l132
   803  00FE  120A  118A  280C   	ljmp	start
   804  0101                     __end_of_main:
   805                           
   806                           	psect	text1
   807  0083                     __ptext1:	
   808 ;; *************** function _setup *****************
   809 ;; Defined at:
   810 ;;		line 101 in file "slave.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0, pclath, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 3
   831 ;; This function calls:
   832 ;;		_I2C_Slave_Init
   833 ;;		_adc_init
   834 ;;		_int_osc_MHz
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840  0083                     _setup:	
   841                           ;psect for function _setup
   842                           
   843  0083                     l1179:	
   844                           ;incstack = 0
   845                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   846                           
   847                           
   848                           ;slave.c: 102:     ANSEL = 0b1;
   849  0083  3001               	movlw	1
   850  0084  1683               	bsf	3,5	;RP0=1, select bank3
   851  0085  1703               	bsf	3,6	;RP1=1, select bank3
   852  0086  0088               	movwf	8	;volatile
   853  0087                     l1181:
   854                           
   855                           ;slave.c: 103:     ANSELH = 0;
   856  0087  0189               	clrf	9	;volatile
   857  0088                     l1183:
   858                           
   859                           ;slave.c: 105:     TRISA = 0X01;
   860  0088  3001               	movlw	1
   861  0089  1683               	bsf	3,5	;RP0=1, select bank1
   862  008A  1303               	bcf	3,6	;RP1=0, select bank1
   863  008B  0085               	movwf	5	;volatile
   864                           
   865                           ;slave.c: 106:     TRISB = 0X0;
   866  008C  0186               	clrf	6	;volatile
   867  008D                     l1185:
   868                           
   869                           ;slave.c: 107:     TRISD = 0Xf0;
   870  008D  30F0               	movlw	240
   871  008E  0088               	movwf	8	;volatile
   872  008F                     l1187:
   873                           
   874                           ;slave.c: 110:     PORTA = 0;
   875  008F  1283               	bcf	3,5	;RP0=0, select bank0
   876  0090  1303               	bcf	3,6	;RP1=0, select bank0
   877  0091  0185               	clrf	5	;volatile
   878  0092                     l1189:
   879                           
   880                           ;slave.c: 111:     PORTB = 0;
   881  0092  0186               	clrf	6	;volatile
   882  0093                     l1191:
   883                           
   884                           ;slave.c: 112:     PORTD = 0;
   885  0093  0188               	clrf	8	;volatile
   886  0094                     l1193:
   887                           
   888                           ;slave.c: 116:     int_osc_MHz(4);
   889  0094  3004               	movlw	4
   890  0095  120A  118A  2110  120A  118A  	fcall	_int_osc_MHz
   891  009A                     l1195:
   892                           
   893                           ;slave.c: 117:     I2C_Slave_Init(0X50);
   894  009A  3050               	movlw	80
   895  009B  120A  118A  20D8  120A  118A  	fcall	_I2C_Slave_Init
   896  00A0                     l1197:
   897                           
   898                           ;slave.c: 119:     INTCONbits.PEIE = 1;
   899  00A0  170B               	bsf	11,6	;volatile
   900  00A1                     l1199:
   901                           
   902                           ;slave.c: 120:     INTCONbits.GIE = 1;
   903  00A1  178B               	bsf	11,7	;volatile
   904  00A2                     l1201:
   905                           
   906                           ;slave.c: 121:     PIR1bits.ADIF = 0;
   907  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   908  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   909  00A4  130C               	bcf	12,6	;volatile
   910  00A5                     l1203:
   911                           
   912                           ;slave.c: 122:     PIE1bits.ADIE = 1;
   913  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   914  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   915  00A7  170C               	bsf	12,6	;volatile
   916  00A8                     l1205:
   917                           
   918                           ;slave.c: 123:     adc_init(1,0,0);
   919  00A8  01F4               	clrf	adc_init@vref_plus
   920  00A9  01F5               	clrf	adc_init@vref_minus
   921  00AA  3001               	movlw	1
   922  00AB  120A  118A  20B1  120A  118A  	fcall	_adc_init
   923  00B0                     l138:
   924  00B0  0008               	return
   925  00B1                     __end_of_setup:
   926                           
   927                           	psect	text2
   928  0110                     __ptext2:	
   929 ;; *************** function _int_osc_MHz *****************
   930 ;; Defined at:
   931 ;;		line 13 in file "OSCILADOR.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  freq            1    wreg     unsigned char 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  freq            1    5[COMMON] unsigned char 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   945 ;;      Params:         0       0       0       0       0
   946 ;;      Locals:         1       0       0       0       0
   947 ;;      Temps:          1       0       0       0       0
   948 ;;      Totals:         2       0       0       0       0
   949 ;;Total ram usage:        2 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; Hardware stack levels required when called: 2
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_setup
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959  0110                     _int_osc_MHz:	
   960                           ;psect for function _int_osc_MHz
   961                           
   962                           
   963                           ;incstack = 0
   964                           ; Regs used in _int_osc_MHz: [wreg+status,2+status,0]
   965                           ;int_osc_MHz@freq stored from wreg
   966  0110  00F5               	movwf	int_osc_MHz@freq
   967  0111                     l861:
   968                           
   969                           ;OSCILADOR.c: 14:         OSCCONbits.IRCF = freq & 0b111;
   970  0111  0875               	movf	int_osc_MHz@freq,w
   971  0112  3907               	andlw	7
   972  0113  00F4               	movwf	??_int_osc_MHz
   973  0114  0EF4               	swapf	??_int_osc_MHz,f
   974  0115  1683               	bsf	3,5	;RP0=1, select bank1
   975  0116  1303               	bcf	3,6	;RP1=0, select bank1
   976  0117  080F               	movf	15,w	;volatile
   977  0118  0674               	xorwf	??_int_osc_MHz,w
   978  0119  398F               	andlw	-113
   979  011A  0674               	xorwf	??_int_osc_MHz,w
   980  011B  008F               	movwf	15	;volatile
   981  011C                     l863:
   982                           
   983                           ;OSCILADOR.c: 15:         OSCCONbits.SCS = 1;
   984  011C  140F               	bsf	15,0	;volatile
   985  011D                     l60:
   986  011D  0008               	return
   987  011E                     __end_of_int_osc_MHz:
   988                           
   989                           	psect	text3
   990  00B1                     __ptext3:	
   991 ;; *************** function _adc_init *****************
   992 ;; Defined at:
   993 ;;		line 17 in file "ADC.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  adc_cs          1    wreg     unsigned char 
   996 ;;  vref_plus       1    4[COMMON] unsigned char 
   997 ;;  vref_minus      1    5[COMMON] unsigned char 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  adc_cs          1    0[BANK0 ] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         2       0       0       0       0
  1010 ;;      Locals:         0       1       0       0       0
  1011 ;;      Temps:          1       0       0       0       0
  1012 ;;      Totals:         3       1       0       0       0
  1013 ;;Total ram usage:        4 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 2
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_setup
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023  00B1                     _adc_init:	
  1024                           ;psect for function _adc_init
  1025                           
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1029                           ;adc_init@adc_cs stored from wreg
  1030  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1031  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1032  00B3  00A0               	movwf	adc_init@adc_cs
  1033  00B4                     l1165:
  1034                           
  1035                           ;ADC.c: 20:     ADCON0bits.ADCS = adc_cs & 0b11;
  1036  00B4  0820               	movf	adc_init@adc_cs,w
  1037  00B5  3903               	andlw	3
  1038  00B6  00F6               	movwf	??_adc_init
  1039  00B7  0EF6               	swapf	??_adc_init,f
  1040  00B8  0DF6               	rlf	??_adc_init,f
  1041  00B9  0DF6               	rlf	??_adc_init,f
  1042  00BA  081F               	movf	31,w	;volatile
  1043  00BB  0676               	xorwf	??_adc_init,w
  1044  00BC  393F               	andlw	-193
  1045  00BD  0676               	xorwf	??_adc_init,w
  1046  00BE  009F               	movwf	31	;volatile
  1047  00BF                     l1167:
  1048                           
  1049                           ;ADC.c: 21:     ADCON0bits.ADON = 1;
  1050  00BF  141F               	bsf	31,0	;volatile
  1051  00C0                     l1169:
  1052                           
  1053                           ;ADC.c: 22:     ADCON1bits.VCFG1 = vref_plus;
  1054  00C0  0C74               	rrf	adc_init@vref_plus,w
  1055  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1056  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1057  00C3  1C03               	skipc
  1058  00C4  129F               	bcf	31,5	;volatile
  1059  00C5  1803               	skipnc
  1060  00C6  169F               	bsf	31,5	;volatile
  1061  00C7                     l1171:
  1062                           
  1063                           ;ADC.c: 23:     ADCON1bits.VCFG0 = vref_minus;
  1064  00C7  0C75               	rrf	adc_init@vref_minus,w
  1065  00C8  1C03               	skipc
  1066  00C9  121F               	bcf	31,4	;volatile
  1067  00CA  1803               	skipnc
  1068  00CB  161F               	bsf	31,4	;volatile
  1069  00CC                     l1173:
  1070                           
  1071                           ;ADC.c: 24:     PIE1bits.ADIE = 1;
  1072  00CC  170C               	bsf	12,6	;volatile
  1073  00CD                     l1175:
  1074                           
  1075                           ;ADC.c: 25:     PIR1bits.ADIF = 0;
  1076  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1077  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1078  00CF  130C               	bcf	12,6	;volatile
  1079  00D0                     l1177:
  1080                           
  1081                           ;ADC.c: 27:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1082  00D0  30C7               	movlw	199
  1083  00D1  00F6               	movwf	??_adc_init
  1084  00D2                     u267:
  1085  00D2  28D3               	nop2
  1086  00D3  0BF6               	decfsz	??_adc_init,f
  1087  00D4  28D2               	goto	u267
  1088  00D5  28D6               	nop2
  1089  00D6  28D7               	nop2
  1090  00D7                     l178:
  1091  00D7  0008               	return
  1092  00D8                     __end_of_adc_init:
  1093                           
  1094                           	psect	text4
  1095  00D8                     __ptext4:	
  1096 ;; *************** function _I2C_Slave_Init *****************
  1097 ;; Defined at:
  1098 ;;		line 82 in file "I2C.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  address         1    wreg     unsigned char 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  address         1    4[COMMON] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         1       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0
  1115 ;;      Totals:         1       0       0       0       0
  1116 ;;Total ram usage:        1 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 2
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_setup
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126  00D8                     _I2C_Slave_Init:	
  1127                           ;psect for function _I2C_Slave_Init
  1128                           
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in _I2C_Slave_Init: [wreg]
  1132                           ;I2C_Slave_Init@address stored from wreg
  1133  00D8  00F4               	movwf	I2C_Slave_Init@address
  1134  00D9                     l847:
  1135                           
  1136                           ;I2C.c: 82: void I2C_Slave_Init(uint8_t address);I2C.c: 83: {;I2C.c: 84:     SSPADD = ad
      +                          dress;
  1137  00D9  0874               	movf	I2C_Slave_Init@address,w
  1138  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1139  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1140  00DC  0093               	movwf	19	;volatile
  1141                           
  1142                           ;I2C.c: 85:     SSPCON = 0x36;
  1143  00DD  3036               	movlw	54
  1144  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1145  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1146  00E0  0094               	movwf	20	;volatile
  1147                           
  1148                           ;I2C.c: 86:     SSPSTAT = 0x80;
  1149  00E1  3080               	movlw	128
  1150  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1151  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1152  00E4  0094               	movwf	20	;volatile
  1153                           
  1154                           ;I2C.c: 87:     SSPCON2 = 0x01;
  1155  00E5  3001               	movlw	1
  1156  00E6  0091               	movwf	17	;volatile
  1157  00E7                     l849:
  1158                           
  1159                           ;I2C.c: 88:     TRISC3 = 1;
  1160  00E7  1587               	bsf	7,3	;volatile
  1161  00E8                     l851:
  1162                           
  1163                           ;I2C.c: 89:     TRISC4 = 1;
  1164  00E8  1607               	bsf	7,4	;volatile
  1165  00E9                     l853:
  1166                           
  1167                           ;I2C.c: 90:     GIE = 1;
  1168  00E9  178B               	bsf	11,7	;volatile
  1169  00EA                     l855:
  1170                           
  1171                           ;I2C.c: 91:     PEIE = 1;
  1172  00EA  170B               	bsf	11,6	;volatile
  1173  00EB                     l857:
  1174                           
  1175                           ;I2C.c: 92:     SSPIF = 0;
  1176  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1177  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1178  00ED  118C               	bcf	12,3	;volatile
  1179  00EE                     l859:
  1180                           
  1181                           ;I2C.c: 93:     SSPIE = 1;
  1182  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1183  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1184  00F0  158C               	bsf	12,3	;volatile
  1185  00F1                     l55:
  1186  00F1  0008               	return
  1187  00F2                     __end_of_I2C_Slave_Init:
  1188                           
  1189                           	psect	text5
  1190  0101                     __ptext5:	
  1191 ;; *************** function _adc_start *****************
  1192 ;; Defined at:
  1193 ;;		line 32 in file "ADC.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  channel         1    wreg     unsigned char 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  channel         1    5[COMMON] unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         1       0       0       0       0
  1209 ;;      Temps:          1       0       0       0       0
  1210 ;;      Totals:         2       0       0       0       0
  1211 ;;Total ram usage:        2 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 2
  1214 ;; This function calls:
  1215 ;;		Nothing
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221  0101                     _adc_start:	
  1222                           ;psect for function _adc_start
  1223                           
  1224                           
  1225                           ;incstack = 0
  1226                           ; Regs used in _adc_start: [wreg+status,2+status,0]
  1227                           ;adc_start@channel stored from wreg
  1228  0101  00F5               	movwf	adc_start@channel
  1229  0102                     l935:
  1230                           
  1231                           ;ADC.c: 33:     ADCON0bits.CHS = channel & 0b1111;
  1232  0102  0875               	movf	adc_start@channel,w
  1233  0103  390F               	andlw	15
  1234  0104  00F4               	movwf	??_adc_start
  1235  0105  0DF4               	rlf	??_adc_start,f
  1236  0106  0DF4               	rlf	??_adc_start,f
  1237  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0109  081F               	movf	31,w	;volatile
  1240  010A  0674               	xorwf	??_adc_start,w
  1241  010B  39C3               	andlw	-61
  1242  010C  0674               	xorwf	??_adc_start,w
  1243  010D  009F               	movwf	31	;volatile
  1244  010E                     l937:
  1245                           
  1246                           ;ADC.c: 34:     ADCON0bits.GO= 1;
  1247  010E  149F               	bsf	31,1	;volatile
  1248  010F                     l181:
  1249  010F  0008               	return
  1250  0110                     __end_of_adc_start:
  1251                           
  1252                           	psect	text6
  1253  0016                     __ptext6:	
  1254 ;; *************** function _isr *****************
  1255 ;; Defined at:
  1256 ;;		line 49 in file "slave.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0
  1272 ;;      Temps:          3       0       0       0       0
  1273 ;;      Totals:         3       0       0       0       0
  1274 ;;Total ram usage:        3 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 1
  1277 ;; This function calls:
  1278 ;;		_adc_read
  1279 ;; This function is called by:
  1280 ;;		Interrupt level 1
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284  0016                     _isr:	
  1285                           ;psect for function _isr
  1286                           
  1287  0016                     i1l1001:
  1288                           
  1289                           ;slave.c: 50:    if(PIR1bits.SSPIF == 1){
  1290  0016  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0017  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0018  1D8C               	btfss	12,3	;volatile
  1293  0019  281B               	goto	u13_21
  1294  001A  281C               	goto	u13_20
  1295  001B                     u13_21:
  1296  001B  2870               	goto	i1l113
  1297  001C                     u13_20:
  1298  001C                     i1l1003:
  1299                           
  1300                           ;slave.c: 52:         SSPCONbits.CKP = 0;
  1301  001C  1214               	bcf	20,4	;volatile
  1302                           
  1303                           ;slave.c: 54:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1304  001D  1B14               	btfsc	20,6	;volatile
  1305  001E  2820               	goto	u14_21
  1306  001F  2821               	goto	u14_20
  1307  0020                     u14_21:
  1308  0020  2825               	goto	i1l1007
  1309  0021                     u14_20:
  1310  0021                     i1l1005:
  1311  0021  1F94               	btfss	20,7	;volatile
  1312  0022  2824               	goto	u15_21
  1313  0023  2825               	goto	u15_20
  1314  0024                     u15_21:
  1315  0024  282C               	goto	i1l1015
  1316  0025                     u15_20:
  1317  0025                     i1l1007:
  1318                           
  1319                           ;slave.c: 55:             z = SSPBUF;
  1320  0025  0813               	movf	19,w	;volatile
  1321  0026  00F1               	movwf	??_isr
  1322  0027  0871               	movf	??_isr,w
  1323  0028  00F9               	movwf	_z
  1324  0029                     i1l1009:
  1325                           
  1326                           ;slave.c: 56:             SSPCONbits.SSPOV = 0;
  1327  0029  1314               	bcf	20,6	;volatile
  1328  002A                     i1l1011:
  1329                           
  1330                           ;slave.c: 57:             SSPCONbits.WCOL = 0;
  1331  002A  1394               	bcf	20,7	;volatile
  1332  002B                     i1l1013:
  1333                           
  1334                           ;slave.c: 58:             SSPCONbits.CKP = 1;
  1335  002B  1614               	bsf	20,4	;volatile
  1336  002C                     i1l1015:
  1337                           
  1338                           ;slave.c: 61:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1339  002C  1683               	bsf	3,5	;RP0=1, select bank1
  1340  002D  1303               	bcf	3,6	;RP1=0, select bank1
  1341  002E  1A94               	btfsc	20,5	;volatile
  1342  002F  2831               	goto	u16_21
  1343  0030  2832               	goto	u16_20
  1344  0031                     u16_21:
  1345  0031  284D               	goto	i1l117
  1346  0032                     u16_20:
  1347  0032                     i1l1017:
  1348  0032  1914               	btfsc	20,2	;volatile
  1349  0033  2835               	goto	u17_21
  1350  0034  2836               	goto	u17_20
  1351  0035                     u17_21:
  1352  0035  284D               	goto	i1l117
  1353  0036                     u17_20:
  1354  0036                     i1l1019:
  1355                           
  1356                           ;slave.c: 63:             z = SSPBUF;
  1357  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0038  0813               	movf	19,w	;volatile
  1360  0039  00F1               	movwf	??_isr
  1361  003A  0871               	movf	??_isr,w
  1362  003B  00F9               	movwf	_z
  1363  003C                     i1l1021:
  1364                           
  1365                           ;slave.c: 65:             PIR1bits.SSPIF = 0;
  1366  003C  118C               	bcf	12,3	;volatile
  1367  003D                     i1l1023:
  1368                           
  1369                           ;slave.c: 66:             SSPCONbits.CKP = 1;
  1370  003D  1614               	bsf	20,4	;volatile
  1371  003E                     i1l118:	
  1372                           ;slave.c: 67:             while(!SSPSTATbits.BF);
  1373                           
  1374  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1375  003F  1303               	bcf	3,6	;RP1=0, select bank1
  1376  0040  1C14               	btfss	20,0	;volatile
  1377  0041  2843               	goto	u18_21
  1378  0042  2844               	goto	u18_20
  1379  0043                     u18_21:
  1380  0043  283E               	goto	i1l118
  1381  0044                     u18_20:
  1382  0044                     i1l1025:
  1383                           
  1384                           ;slave.c: 68:             PORTD = SSPBUF;
  1385  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0046  0813               	movf	19,w	;volatile
  1388  0047  0088               	movwf	8	;volatile
  1389                           
  1390                           ;slave.c: 69:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1391  0048  3053               	movlw	83
  1392  0049  00F1               	movwf	??_isr
  1393  004A                     u27_27:
  1394  004A  0BF1               	decfsz	??_isr,f
  1395  004B  284A               	goto	u27_27
  1396                           
  1397                           ;slave.c: 71:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1398  004C  286D               	goto	i1l121
  1399  004D                     i1l117:
  1400  004D  1A94               	btfsc	20,5	;volatile
  1401  004E  2850               	goto	u19_21
  1402  004F  2851               	goto	u19_20
  1403  0050                     u19_21:
  1404  0050  286D               	goto	i1l121
  1405  0051                     u19_20:
  1406  0051                     i1l1027:
  1407  0051  1D14               	btfss	20,2	;volatile
  1408  0052  2854               	goto	u20_21
  1409  0053  2855               	goto	u20_20
  1410  0054                     u20_21:
  1411  0054  286D               	goto	i1l121
  1412  0055                     u20_20:
  1413  0055                     i1l1029:
  1414                           
  1415                           ;slave.c: 72:             z = SSPBUF;
  1416  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0057  0813               	movf	19,w	;volatile
  1419  0058  00F1               	movwf	??_isr
  1420  0059  0871               	movf	??_isr,w
  1421  005A  00F9               	movwf	_z
  1422  005B                     i1l1031:
  1423                           
  1424                           ;slave.c: 73:             BF = 0;
  1425  005B  1683               	bsf	3,5	;RP0=1, select bank1
  1426  005C  1303               	bcf	3,6	;RP1=0, select bank1
  1427  005D  1014               	bcf	20,0	;volatile
  1428                           
  1429                           ;slave.c: 74:             SSPBUF = PORTB;
  1430  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1431  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0060  0806               	movf	6,w	;volatile
  1433  0061  0093               	movwf	19	;volatile
  1434  0062                     i1l1033:
  1435                           
  1436                           ;slave.c: 75:             SSPCONbits.CKP = 1;
  1437  0062  1614               	bsf	20,4	;volatile
  1438                           
  1439                           ;slave.c: 76:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1440  0063  3053               	movlw	83
  1441  0064  00F1               	movwf	??_isr
  1442  0065                     u28_27:
  1443  0065  0BF1               	decfsz	??_isr,f
  1444  0066  2865               	goto	u28_27
  1445  0067                     i1l123:	
  1446                           ;slave.c: 77:             while(SSPSTATbits.BF);
  1447                           
  1448  0067  1683               	bsf	3,5	;RP0=1, select bank1
  1449  0068  1303               	bcf	3,6	;RP1=0, select bank1
  1450  0069  1814               	btfsc	20,0	;volatile
  1451  006A  286C               	goto	u21_21
  1452  006B  286D               	goto	u21_20
  1453  006C                     u21_21:
  1454  006C  2867               	goto	i1l123
  1455  006D                     u21_20:
  1456  006D                     i1l121:
  1457                           
  1458                           ;slave.c: 79:         PIR1bits.SSPIF = 0;
  1459  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1460  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1461  006F  118C               	bcf	12,3	;volatile
  1462  0070                     i1l113:	
  1463                           ;slave.c: 80:     }
  1464                           
  1465                           
  1466                           ;slave.c: 82:    if(PIR1bits.ADIF){
  1467  0070  1F0C               	btfss	12,6	;volatile
  1468  0071  2873               	goto	u22_21
  1469  0072  2874               	goto	u22_20
  1470  0073                     u22_21:
  1471  0073  287C               	goto	i1l127
  1472  0074                     u22_20:
  1473  0074                     i1l1035:
  1474                           
  1475                           ;slave.c: 83:             PORTB = adc_read();
  1476  0074  120A  118A  211E  120A  118A  	fcall	_adc_read
  1477  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1478  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1479  007B  0086               	movwf	6	;volatile
  1480  007C                     i1l127:
  1481  007C  0873               	movf	??_isr+2,w
  1482  007D  008A               	movwf	10
  1483  007E  0E72               	swapf	??_isr+1,w
  1484  007F  0083               	movwf	3
  1485  0080  0EFE               	swapf	btemp,f
  1486  0081  0E7E               	swapf	btemp,w
  1487  0082  0009               	retfie
  1488  0083                     __end_of_isr:
  1489                           
  1490                           	psect	intentry
  1491  0004                     __pintentry:	
  1492                           ;incstack = 0
  1493                           ; Regs used in _isr: [wreg+pclath+cstack]
  1494                           
  1495  0004                     interrupt_function:
  1496  007E                     saved_w	set	btemp
  1497  0004  00FE               	movwf	btemp
  1498  0005  0E03               	swapf	3,w
  1499  0006  00F2               	movwf	??_isr+1
  1500  0007  080A               	movf	10,w
  1501  0008  00F3               	movwf	??_isr+2
  1502  0009  120A  118A  2816   	ljmp	_isr
  1503                           
  1504                           	psect	text7
  1505  011E                     __ptext7:	
  1506 ;; *************** function _adc_read *****************
  1507 ;; Defined at:
  1508 ;;		line 37 in file "ADC.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      unsigned char 
  1515 ;; Registers used:
  1516 ;;		wreg
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       0       0       0       0
  1523 ;;      Locals:         0       0       0       0       0
  1524 ;;      Temps:          1       0       0       0       0
  1525 ;;      Totals:         1       0       0       0       0
  1526 ;;Total ram usage:        1 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_isr
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535  011E                     _adc_read:	
  1536                           ;psect for function _adc_read
  1537                           
  1538  011E                     i1l901:	
  1539                           ;incstack = 0
  1540                           ; Regs used in _adc_read: [wreg]
  1541                           
  1542                           
  1543                           ;ADC.c: 38:     PIR1bits.ADIF = 0;
  1544  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1545  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0120  130C               	bcf	12,6	;volatile
  1547  0121                     i1l903:
  1548                           
  1549                           ;ADC.c: 39:     valor_adc = ADRESH;
  1550  0121  081E               	movf	30,w	;volatile
  1551  0122  00F0               	movwf	??_adc_read
  1552  0123  0870               	movf	??_adc_read,w
  1553  0124  00F7               	movwf	_valor_adc
  1554                           
  1555                           ;ADC.c: 40:     return valor_adc;
  1556  0125  0877               	movf	_valor_adc,w
  1557  0126                     i1l184:
  1558  0126  0008               	return
  1559  0127                     __end_of_adc_read:
  1560  007E                     btemp	set	126	;btemp
  1561  007E                     wtemp0	set	126
  1562                           
  1563                           	psect	idloc
  1564                           
  1565                           ;Config register IDLOC0 @ 0x2000
  1566                           ;	unspecified, using default values
  1567  2000                     	org	8192
  1568  2000  3FFF               	dw	16383
  1569                           
  1570                           ;Config register IDLOC1 @ 0x2001
  1571                           ;	unspecified, using default values
  1572  2001                     	org	8193
  1573  2001  3FFF               	dw	16383
  1574                           
  1575                           ;Config register IDLOC2 @ 0x2002
  1576                           ;	unspecified, using default values
  1577  2002                     	org	8194
  1578  2002  3FFF               	dw	16383
  1579                           
  1580                           ;Config register IDLOC3 @ 0x2003
  1581                           ;	unspecified, using default values
  1582  2003                     	org	8195
  1583  2003  3FFF               	dw	16383
  1584                           
  1585                           	psect	config
  1586                           
  1587                           ;Config register CONFIG1 @ 0x2007
  1588                           ;	Oscillator Selection bits
  1589                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1590                           ;	Watchdog Timer Enable bit
  1591                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1592                           ;	Power-up Timer Enable bit
  1593                           ;	PWRTE = OFF, PWRT disabled
  1594                           ;	RE3/MCLR pin function select bit
  1595                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1596                           ;	Code Protection bit
  1597                           ;	CP = OFF, Program memory code protection is disabled
  1598                           ;	Data Code Protection bit
  1599                           ;	CPD = OFF, Data memory code protection is disabled
  1600                           ;	Brown Out Reset Selection bits
  1601                           ;	BOREN = OFF, BOR disabled
  1602                           ;	Internal External Switchover bit
  1603                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1604                           ;	Fail-Safe Clock Monitor Enabled bit
  1605                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1606                           ;	Low Voltage Programming Enable bit
  1607                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1608                           ;	In-Circuit Debugger Mode bit
  1609                           ;	DEBUG = 0x1, unprogrammed default
  1610  2007                     	org	8199
  1611  2007  20D4               	dw	8404
  1612                           
  1613                           ;Config register CONFIG2 @ 0x2008
  1614                           ;	Brown-out Reset Selection bit
  1615                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1616                           ;	Flash Program Memory Self Write Enable bits
  1617                           ;	WRT = OFF, Write protection off
  1618  2008                     	org	8200
  1619  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_adc_init

Critical Paths under _isr in COMMON

    _isr->_adc_read

Critical Paths under _main in BANK0

    _setup->_adc_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     318
                          _adc_start
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     303
                     _I2C_Slave_Init
                           _adc_init
                        _int_osc_MHz
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             4     2      2     273
                                              4 COMMON     3     1      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                           _adc_read
 ---------------------------------------------------------------------------------
 (4) _adc_read                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_start
   _setup
     _I2C_Slave_Init
     _adc_init
     _int_osc_MHz

 _isr (ROOT)
   _adc_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Aug 23 00:42:26 2022

                      _z 0079              _SSPSTATbits 0094                       _BF 04A0  
                     l60 011D                       l55 00F1                      l132 00F7  
                    l138 00B0                      l181 010F                      l178 00D7  
                    l851 00E8                      l853 00E9                      l861 0111  
                    l935 0102                      l855 00EA                      l847 00D9  
                    l863 011C                      l937 010E                      l857 00EB  
                    l849 00E7                      l859 00EE                      _GIE 005F  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      _RD4 0044                      _RC6 003E  
                    _RD5 0045                      _RC7 003F                      _RD6 0046  
                    _RD7 0047                      u267 00D2                      _isr 0016  
                   l1201 00A2                     l1203 00A5                     l1205 00A8  
                   l1207 00F2                     l1171 00C7                     l1173 00CC  
                   l1165 00B4                     l1181 0087                     l1175 00CD  
                   l1167 00BF                     l1191 0093                     l1183 0088  
                   l1177 00D0                     l1169 00C0                     l1193 0094  
                   l1185 008D                     l1195 009A                     l1187 008F  
                   l1179 0083                     l1197 00A0                     l1189 0092  
                   l1199 00A1                     ?_isr 0070                     _PEIE 005E  
                   _TMR0 0001                     _dato 0078                     _main 00F2  
                   btemp 007E                     start 000C                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l121 006D  
                  i1l113 0070                    i1l123 0067                    i1l117 004D  
                  i1l118 003E                    i1l127 007C                    i1l184 0126  
                  i1l901 011E                    i1l903 0121                    u20_20 0055  
                  u20_21 0054                    u21_20 006D                    u13_20 001C  
                  u21_21 006C                    u13_21 001B                    u22_20 0074  
                  u14_20 0021                    u22_21 0073                    u14_21 0020  
                  u15_20 0025                    u15_21 0024                    u16_20 0032  
                  u16_21 0031                    u17_20 0036                    u17_21 0035  
                  u18_20 0044                    u18_21 0043                    u19_20 0051  
                  u19_21 0050                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    u27_27 004A                    u28_27 0065  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063         adc_start@channel 0075  
     adc_init@vref_minus 0075          int_osc_MHz@freq 0075                    _setup 0083  
           ?_int_osc_MHz 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0101  
                 ??_main 0077                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189         __end_of_adc_init 00D8         __end_of_adc_read 0127  
                 i1l1001 0016                   i1l1011 002A                   i1l1003 001C  
                 i1l1021 003C                   i1l1013 002B                   i1l1005 0021  
                 i1l1031 005B                   i1l1023 003D                   i1l1015 002C  
                 i1l1007 0025                   i1l1033 0062                   i1l1025 0044  
                 i1l1017 0032                   i1l1009 0029                   i1l1035 0074  
                 i1l1027 0051                   i1l1019 0036                   i1l1029 0055  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
__end_of__initialization 0012           __pcstackCOMMON 0070            __end_of_setup 00B1  
         _OPTION_REGbits 0081           adc_init@adc_cs 0020                  ??_setup 0077  
  I2C_Slave_Init@address 0074               __pmaintext 00F2               __pintentry 0004  
              ?_adc_init 0074                ?_adc_read 0070        __end_of_adc_start 0110  
                _SSPCON2 0091                  _SSPSTAT 0094               ??_adc_init 0076  
             ??_adc_read 0070                  __ptext1 0083                  __ptext2 0110  
                __ptext3 00B1                  __ptext4 00D8                  __ptext5 0101  
                __ptext6 0016                  __ptext7 011E     end_of_initialization 0012  
         _I2C_Slave_Init 00D8                _TRISCbits 0087   __end_of_I2C_Slave_Init 00F2  
      adc_init@vref_plus 0074      start_initialization 000F              __end_of_isr 0083  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                _adc_start 0101            ??_int_osc_MHz 0074  
             ?_adc_start 0070        interrupt_function 0004                 _PIE1bits 008C  
    __end_of_int_osc_MHz 011E                 _PIR1bits 000C                _valor_adc 0077  
             _ADCON0bits 001F               _ADCON1bits 009F                 _adc_init 00B1  
               _adc_read 011E              ??_adc_start 0074              _int_osc_MHz 0110  
       ??_I2C_Slave_Init 0074               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F              _SSPCON2bits 0091               _SSPCONbits 0014  
